{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Using Scarf as software distribution tool Scarf's mission is to help open source developers distribute and monetize their work. What is Scarf? Why should I use it? Scarf is a developer-centric, cross-platform system package manager that enables developers to see how their software is actually used and to get paid for their work. If you distribute your software with Scarf, your users will be able to easily install it with the scarf CLI, and you'll gain insights into how your software is used such as: Install counts Exit codes when your program is invoked Execution times Sub-commands and flags that are passed on the command line The best part is that you can get all of these features without writing any code! You simply upload your package to Scarf. The end-user will install your package via scarf which installs your program inside a wrapper so that Scarf can capture your package's usage statistics. Future work will be to allow you to charge installers of your packages for installation, usage, and/or support. Install Scarf You'll need to install the scarf CLI with: $ curl https://gist.githubusercontent.com/aviaviavi/860638ec8d3728ea74ed36176cd26173/raw/ | bash Create your Scarf account Head over to https://scarf.sh to register your developer account. Create your first package Creating a Scarf package primarily involves writing a small package specification. Scarf specs are written in Dhall , a nifty alternative to yaml. An example package file would look like: -- import scarf dhall definitions at the top -- then, you'll specify a list of distributions (one per platform) -- `URI` can point to a local tar archive or a remote one let platforms = https://gist.githubusercontent.com/aviaviavi/16caf330e97df23c892cab1c97316ba9/raw in { distributions = [ { platform = platforms.mac , signature = [] : Optional Text , simpleExecutableInstall = [ \"curl-runnings\" ] : Optional Text , uri = \"./curl-runnings-0.11.0-mac.tar.gz\" } , { platform = platforms.linux_x86_64 , signature = [] : Optional Text , simpleExecutableInstall = [ \"curl-runnings\" ] : Optional Text , uri = \"https://github.com/aviaviavi/curl-runnings/releases/download/0.11.0/curl-runnings-0.11.0.tar.gz\" } ] , name = \"curl-runnings\" , version = \"0.11.0\" , author = \"Avi Press\" , copyright = \"2019 Avi Press\" , license = \"MIT\" } Some notes: signature is not currently checked, but will be in a future release simpleExecutableInstall is currently the only install type supported, but more will be coming soon.","title":"Distributing your software with scarf"},{"location":"#using-scarf-as-software-distribution-tool","text":"Scarf's mission is to help open source developers distribute and monetize their work.","title":"Using Scarf as software distribution tool"},{"location":"#what-is-scarf-why-should-i-use-it","text":"Scarf is a developer-centric, cross-platform system package manager that enables developers to see how their software is actually used and to get paid for their work. If you distribute your software with Scarf, your users will be able to easily install it with the scarf CLI, and you'll gain insights into how your software is used such as: Install counts Exit codes when your program is invoked Execution times Sub-commands and flags that are passed on the command line The best part is that you can get all of these features without writing any code! You simply upload your package to Scarf. The end-user will install your package via scarf which installs your program inside a wrapper so that Scarf can capture your package's usage statistics. Future work will be to allow you to charge installers of your packages for installation, usage, and/or support.","title":"What is Scarf? Why should I use it?"},{"location":"#install-scarf","text":"You'll need to install the scarf CLI with: $ curl https://gist.githubusercontent.com/aviaviavi/860638ec8d3728ea74ed36176cd26173/raw/ | bash","title":"Install Scarf"},{"location":"#create-your-scarf-account","text":"Head over to https://scarf.sh to register your developer account.","title":"Create your Scarf account"},{"location":"#create-your-first-package","text":"Creating a Scarf package primarily involves writing a small package specification. Scarf specs are written in Dhall , a nifty alternative to yaml. An example package file would look like: -- import scarf dhall definitions at the top -- then, you'll specify a list of distributions (one per platform) -- `URI` can point to a local tar archive or a remote one let platforms = https://gist.githubusercontent.com/aviaviavi/16caf330e97df23c892cab1c97316ba9/raw in { distributions = [ { platform = platforms.mac , signature = [] : Optional Text , simpleExecutableInstall = [ \"curl-runnings\" ] : Optional Text , uri = \"./curl-runnings-0.11.0-mac.tar.gz\" } , { platform = platforms.linux_x86_64 , signature = [] : Optional Text , simpleExecutableInstall = [ \"curl-runnings\" ] : Optional Text , uri = \"https://github.com/aviaviavi/curl-runnings/releases/download/0.11.0/curl-runnings-0.11.0.tar.gz\" } ] , name = \"curl-runnings\" , version = \"0.11.0\" , author = \"Avi Press\" , copyright = \"2019 Avi Press\" , license = \"MIT\" } Some notes: signature is not currently checked, but will be in a future release simpleExecutableInstall is currently the only install type supported, but more will be coming soon.","title":"Create your first package"},{"location":"end-user/","text":"Using Scarf as system package manager Overview In addition to easy package management, Scarf supports installing static binaries in a way that sends anonymized usage statistics to the package author. Installation $ curl https://gist.githubusercontent.com/aviaviavi/860638ec8d3728ea74ed36176cd26173/raw/ | bash You'll then need to add ~/.scarf/bin to you PATH Install your packages $ scarf install <package>","title":"Scarf as system package manager"},{"location":"end-user/#using-scarf-as-system-package-manager","text":"","title":"Using Scarf as system package manager"},{"location":"end-user/#overview","text":"In addition to easy package management, Scarf supports installing static binaries in a way that sends anonymized usage statistics to the package author.","title":"Overview"},{"location":"end-user/#installation","text":"$ curl https://gist.githubusercontent.com/aviaviavi/860638ec8d3728ea74ed36176cd26173/raw/ | bash You'll then need to add ~/.scarf/bin to you PATH","title":"Installation"},{"location":"end-user/#install-your-packages","text":"$ scarf install <package>","title":"Install your packages"},{"location":"project-status/","text":"Project status Scarf is still in its very early stages and is under heavy development. Feedback of any kind of very welcome. Tell us what you think! Reach out to feedback@scarf.sh or open an issue on github for feature requests, bug reports, questions and comments. Currently, scarf only supports a small subset of the planned features. We're working hard to deliver on our roadmap below. For developers: [x] Hosting and distribution for your packages [x] Basic analytics [] Monetization [] Accept payments on installation [] Accept payments for running your software [] Tiered user system for different payment levels. Eg, the ability to allow individual developers to user your package for free, but charge companies to use it. [] An SDK for more fine-grained scarf integration with your code For users: [] A fully featured package managment experience for users [x] Basic binary installation [] Complex build installation [] Dependency management [] Clean user package specification [] Per project functionality","title":"Project Status and Roadmap"},{"location":"project-status/#project-status","text":"Scarf is still in its very early stages and is under heavy development. Feedback of any kind of very welcome. Tell us what you think! Reach out to feedback@scarf.sh or open an issue on github for feature requests, bug reports, questions and comments. Currently, scarf only supports a small subset of the planned features. We're working hard to deliver on our roadmap below. For developers: [x] Hosting and distribution for your packages [x] Basic analytics [] Monetization [] Accept payments on installation [] Accept payments for running your software [] Tiered user system for different payment levels. Eg, the ability to allow individual developers to user your package for free, but charge companies to use it. [] An SDK for more fine-grained scarf integration with your code For users: [] A fully featured package managment experience for users [x] Basic binary installation [] Complex build installation [] Dependency management [] Clean user package specification [] Per project functionality","title":"Project status"}]}